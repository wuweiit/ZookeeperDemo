<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/schema/util
		http://www.springframework.org/schema/schema/util/spring-util.xsd 
		">

	<context:annotation-config />
	


	<!-- 提供该PropertyPlaceholderConfigurer bean支持把properties文件中的信息读取到XML配置文件的表达式中 -->
	<!-- 从Spring2.5开始引入命名空间配置加载properties文件到XML -->
	<context:property-placeholder location="classpath:/config/database/redis.properties" />
 	

 
	<!-- jedis pool配置  
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">    
        <property name="maxIdle" value="${redis.maxIdle}" />   
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  --> 
 
 
 
   <!-- spring data redis   
    <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="usePool" value="true"></property>  
        <property name="hostName" value="${redis.host}" />  
        <property name="port" value="${redis.port}" />  
        <property name="password" value="${redis.pass}" />  
        <property name="timeout" value="${redis.timeout}" />  
        <property name="database" value="${redis.default.db}"></property>  
        <constructor-arg index="0" ref="jedisPoolConfig" />  
    </bean>-->

	<!-- redis template definition 
	<bean id="redisTemplate"  class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="jedisConnFactory" />  
	</bean>-->
 
 
 
 	
 
	<!-- 使用annotation定义事务
	<tx:annotation-driven transaction-manager="transactionManager" /> -->

 	<!-- bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
 	<context:component-scan base-package="org.marker.count.mongo.impl" />
 
 	


</beans>
